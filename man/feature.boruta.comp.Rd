% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/feature.boruta.R
\name{feature.boruta.comp}
\alias{feature.boruta.comp}
\title{Boruta Feature Selection}
\usage{
feature.boruta.comp(target, predictors, fixNA = F, roughFix = F,
  variables = F, selected = F, formula = F, tentative = F,
  pValue = 0.01, mcAdj = T, maxRuns = 100, doTrace = 0,
  holdHistory = T, getImp = Boruta::getImpRfZ, verbose = F, ...)
}
\arguments{
\item{target}{Response vector; factor for classification, numeric vector
for regression.}

\item{predictors}{\code{data.frame} with predictors.}

\item{fixNA}{\code{boolean} switch that decides how \code{NA} values
in the \code{predictors} and \code{target} variables will
be handled. \code{FALSE} would cause the \code{NA}s to be
ignored. \code{TRUE} will eliminate all observations
including a \code{NA} value. Default is \code{FALSE}.}

\item{roughFix}{\code{boolean} switch that decides whether the
\code{\link{Boruta::TentativeRoughFix}} method will be
used to resolve potentially remaining undecided variables.
Default is \code{FALSE}.}

\item{variables}{\code{boolean} switch that decides whether the variables
of all three categories (Confirmed, Tentative, Rejected)
will be appended to the returned \code{Boruta} object.
Default is \code{FALSE}.}

\item{selected}{\code{boolean} switch that decides whether the confirmed
and tentative varialbes will be added as a combined vector
to the \code{Boruta} object. Default is \code{FALSE}.
Only works when \code{variables} is \code{TRUE}.}

\item{formula}{\code{boolean} switch that decides whether a formula will
be appended to the returned \code{Boruta} object. This
formula will relate the \code{target} with all confirmed
\code{predictors}. Depending on the \code{tentative}
switch the tentative variables might be added as well.
Defaults to \code{FALSE}.}

\item{tentative}{\code{boolean} switch that decides whether tentative
attributes will be considered for a formula. Default is
\code{FALSE}.}

\item{pValue}{Confidence level. Default value should be used. Default is
0.01.}

\item{mcAdj}{If set to \code{TRUE}, a multiple comparisons adjustment
using the Bonferroni method will be applied. Default value
should be used; older (1.x and 2.x) versions of Boruta
were effectively using FALSE. Default value is
\code{TRUE}.}

\item{maxRuns}{Maximal number of importance source runs. You may increase
it to resolve attributes left tentative. Default is 100.}

\item{doTrace}{Verbosity level. 0 means no tracing, 1 means reporting
decision about each attribute as soon as it is justified,
2 means same as 1, plus reporting each importance source
run. Default is 0.}

\item{holdHistory}{If set to \code{TRUE}, the full history of importance is
stored and returned as the \code{ImpHistory} element of
the result. Can be used to decrease a memory footprint of
Boruta in case this side data is not used, especially when
the number of attributes is huge; yet it disables plotting
of such made Boruta objects and the use of the
\code{\link{Boruta::TentativeRoughFix}} function. Default
is \code{FALSE}.}

\item{getImp}{Function used to obtain attribute importance. The default
is \code{\link{getImpRfZ}}, which runs random forest from
the \code{\link{ranger}} package and gathers Z-scores of
mean decrease accuracy measure. It should return a numeric
vector of a size identical to the number of columns of its
first argument, containing importance measure of
respective attributes. Any order-preserving transformation
of this measure will yield the same result. It is assumed
that more important attributes get higher importance.
\code{+-Inf} are accepted, \code{NaNs} and \code{NAs} are
treated as 0s, with a warning. Default is
\code{\link{Boruta::getImpRfZ}}.}

\item{verbose}{\code{boolean} switch that decides whether the error
output will provide more verbose information. Default is
\code{FALSE}.}
}
\value{
\code{Boruta} object as it is also returned by the underlying
        \code{\link{Boruta::Boruta}} method. This default return value can
        include severeal extensions, depending on parameters like
        \code{formula}:
           \item{target}{The name of the target vector.}
           \item{variables}{Variable names of all three categories
                            (Confirmed, Tentative, Rejected) }
           \item{selected}{Variables names of confirmed and tentative
                           variables in one vector.}
           \item{formula}{Formula of the form
                           \code{target ~ predictors.(confirmed/tentative)}}
}
\description{
Wrapper around the \link{Boruta} package. Boruta is a so called all relevant
feature seletion wrapper, capable of working with each classifier outputting
variable importance measure (VIM). This function provides a wrapper ensuring
correct provision of input data and the potential to execute convenience
functions that e.g. provide regression formula output.
}
\details{
The method first saves the name of the original \code{target} parameter so it
is potentially reusable for formula creation later on. In case the
\code{fixNA} switch is \code{TRUE}, all observations containing \code{NA}
values will be eliminated. If this should affect all observations an error
will be produced. Before executing the Boruta algorithm, the important input
parameters \code{target} and \code{predictors} will be checked via the
\code{\link{feature.boruta.fixNA}} method. Should any issues with the input
be found (wrong data types, differing lengths, \code{NA}s) an appropriate
error will be thrown.
Next the actual \code{\link{Boruta::Boruta}} algorithm is executed with the
provided parameters. Bortua than iteratively compares the importance of
shadow attributes with the original attributes. Those with a significantly
worse performance than shadow attributes will be rejected; those performing
significantly better will be confirmed.
Since the Boruta algorithm might not converge in the given \code{maxRuns}
iterations, the \code{\link{Boruta::TentativeRoughFix}} can be used to
resolve still missing values (given \code{roughFix} is \code{TRUE}).
Finally, depending on the values of the \code{variables} and \code{formula}
switches, a formula will be created and/or the confirmed/rejected/tentative
attributes are appended to the returned \code{Boruta} object.
}
\examples{
 KaggleHouse:::feature.boruta(
   target = data_train_na$SalePrice, predictors = data_train_na[-81],
    fixNA = T, roughFix = T, verbose = T
 )

}
\references{
Miron B. Kursa, Witold R. Rudnicki (2010).
 Feature Selection with the Boruta Package.
 \emph{Journal of Statistical Software, 36(11)}, p. 1-13.
 URL: \url{http://www.jstatsoft.org/v36/i11/}
}
\seealso{
\code{\link{Boruta::Boruta}}

\code{\link{feature.boruta.fixNA}}

\code{\link{feature.boruta.tentative}}

\code{\link{feature.boruta.variables}}

\code{\link{feature.boruta.selected}}

\code{\link{feature.boruta.formula}}

\code{\link{feature.boruta.checkInputParams}}
}

